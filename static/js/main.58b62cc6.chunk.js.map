{"version":3,"sources":["assets/img/donorspot.jpg","components/theme.js","components/darktheme.js","components/Navbar.js","components/card.js","components/PrimaryProjectRow.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","secondary","status","danger","darkTheme","type","useStyles","makeStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Typography","variant","root","marginBottom","media","MediaCard","props","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","Project_Name","CardActions","href","Source_Link","style","Button","size","PrimaryProjectRow","projectcard","projects","map","project","Project_Technologies","Grid","container","direction","item","xs","margin","FormPropsTextFields","noValidate","autoComplete","TextField","required","label","defaultValue","App","ThemeProvider","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58b62cc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/donorspot.f57298a4.jpg\";","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#173e43\" },\n    secondary: { main: \"#3fb0ac\" },\n  },\n  status: {\n    danger: 'orange',\n  },\n});\n\nexport default theme;","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark',\n    },\n  });\n\n\nexport default darkTheme\n  ","import React from 'react';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-block',\n    },\n    flex: 50\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>About Me</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Projects</MenuItem>\n      <MenuItem onClick={handleMenuClose}>Contact Me</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\">\n            Anthony Nierva\n          </Typography>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport picture from \"../assets/img/donorspot.jpg\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    marginBottom: \"20px\",\n  },\n  media: {\n    height: 200,\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image=\"https://res.cloudinary.com/diadpow6d/image/upload/v1586415477/coulzfgvea7f7wgnyvry.jpg\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {props.Project_Name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <a href={props.Source_Link} style={{\"textDecoration\" : \"inherit\"}}>\n        <Button size=\"small\" color=\"primary\">\n            Source Code\n        </Button>\n        </a>\n      </CardActions>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport MediaCard from './card';\nimport projects from '../PrimaryProjects.json';\n\nexport default function PrimaryProjectRow() {\n\n    let projectcard = projects.map(project => {\n        return(\n            <MediaCard\n             Project_Name={project.Project_Name}\n             Project_Technologies={project.Project_Technologies}\n             Source_Link={project.Source_Link}\n             /> \n        )\n    })\n\n    return(      \n    <Grid container direction=\"row\">\n    <Grid item xs={2}></Grid>\n      <Grid item={true} xs={8}>\n      {projectcard}\n      </Grid>\n    <Grid item xs={2}></Grid>\n  </Grid>)\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function FormPropsTextFields() {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <Grid container direction=\"column\">\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Full Name\"\n          defaultValue=\"Hello World\"\n          variant=\"outlined\"\n        />\n        \n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Email\"\n          defaultValue=\"Hello World\"\n          variant=\"outlined\"\n        />\n        <TextField\n          required\n          id=\"outlined-required\"\n          label=\"Your message\"\n          defaultValue=\"Hello World\"\n          variant=\"outlined\"\n        />\n        </Grid>\n      </div>\n    </form>\n  );\n}","import React from 'react';\nimport './App.css';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './components/theme';\nimport darkTheme from './components/darktheme';\nimport PrimarySearchAppBar from './components/Navbar';\nimport PrimaryProjectRow from './components/PrimaryProjectRow';\nimport { Button, Typography } from '@material-ui/core';\nimport FormPropsTextFields from './components/form';\nimport { Grid } from '@material-ui/core';\n\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n    <div className=\"App\">\n\n    <section id=\"top\" style={{\"height\": \"100vh\"}}>\n    <PrimarySearchAppBar/>\n    <div id=\"intro\">\n    <Typography style={{\"marginTop\": \"200px\"}}>\n    <h1 style={{\"color\": \"white\"}}>Hey, My name is Anthony Nierva</h1>\n    </Typography>\n    <h2 style={{\"color\": \"white\"}}>I'm a Full-Stack Web Developer.</h2>\n    <a href=\"#projects\" style={{\"textDecoration\" : \"inherit\"}} >\n    <Button variant=\"contained\" color=\"primary\" style={{\"marginRight\": \"10px\"}}>See my work</Button>\n    </a>\n    <a href=\"#contact\" style={{\"textDecoration\" : \"inherit\"}} >\n    <Button variant=\"contained\" color=\"secondary\">Wish to contact me?</Button>\n    </a>\n    </div>\n    </section>\n\n    <ThemeProvider theme={darkTheme}>\n    <section id=\"projects\" style={{\"marginBottom\": \"200px\"}}>\n    <h1 id=\"myProjects\">My Projects</h1>\n    <PrimaryProjectRow/>\n    </section>\n    </ThemeProvider>\n\n\n    <section id=\"contact\" backgroundColor=\"secondary\">\n    <h1>I look forward to hearing from you!</h1>\n    <FormPropsTextFields/>\n    </section>\n\n\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}